
/themes/basic/skin/images/img01.jpg

/themes/basic/skin/images/img02.jpg


所以，创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：

$ mkdir learngit
$ cd learngit
$ pwd
               ls -ah
现在总结一下今天学的两点内容：

初始化一个Git仓库，使用git init命令。

添加文件到Git仓库，分两步：

第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；
$ git add readme.txt

第二步，使用命令git commit，完成。
$ git commit -m "wrote a readme file"


$ git add file1.txt
$ git add file2.txt file3.txt
$ git commit -m "add 3 files."



现在，运行git status命令看看结果：

git diff顾名思义就是查看difference，显示的格式正是Unix通用的diff格式，可以从上面的命令输出看到，我们在第一行添加了一个“distributed”单词。
$ git diff readme.txt 


git log命令显示从最近到最远的提交日志，我们可以看到3次提交，
$ git log

如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数：$ git log --pretty=oneline



回退到上一个版本
$ git reset --hard HEAD^
上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。


查看文本内容
$ cat test.txt


恢复版本
$ git reset --hard 3628164




Git提供了一个命令git reflog用来记录你的每一次命令：
$ git reflog


命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：

一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；

一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

总之，就是让这个文件回到最近一次git commit或git add时的状态。

$ git checkout -- readme.txt



git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。
$ git reset HEAD readme.txt



现在你有两个选择，一是确实要从版本库中删除该文件，那就用命令git rm删掉，并且git commit：
$ git rm test.txt
$ git commit -m "remove test.txt"






git push origin master

git pull origin master

git remote remove origin
git remote add origin git@github.com:vincentzwb/maiyu.git



查看远程库信息，使用git remote -v；

本地新建的分支如果不推送到远程，对其他人就是不可见的；

从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；

在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；

建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；

从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。



2 查看本地分支
$ git branch 

创建分支
$ git branch test  

切换分支到test
$ git checkout test  